@use "sass:color";
@use './variables' as *;

// ===== BUTTON MIXINS =====

// Base button styling
@mixin button-base {
  border: none;
  border-radius: $radius-md;
  cursor: pointer;
  font-weight: 700;
  font-size: 1.1rem;
  padding: 0.75rem;
  transition: all 0.3s ease;
  outline: none;

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }
}

// Primary button (using secondary color as primary button color)
@mixin button-primary {
  @include button-base;
  background-color: $secondary;
  color: $white;

  &:hover:not(:disabled) {
    background-color: $secondary-dark;
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: scale(0.98);
  }
}

// Secondary button (outline style)
@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  border: 2px solid $accent;
  color: $accent;

  &:hover:not(:disabled) {
    background-color: $accent;
    color: white;
    transform: scale(1.05);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    font-weight: 600;
  }

  &:active:not(:disabled) {
    transform: scale(0.98);
  }

  &:focus {
    box-shadow: 0 0 0 3px rgba($accent, 0.3);
  }
}

/* ===== SUBMIT BUTTON UTILITIES ===== */
@mixin submit-btn($margin-top: 0.5rem) {
  margin-top: $margin-top;

  &:hover:not(:disabled) {
    transform: translateY(-1px);
  }
}

@mixin submit-btn-loading {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

// Interactive hover effect for links/buttons
@mixin interactive-hover($scale: 1.05) {
  transition: all 0.3s ease;
  
  &:hover {
    transform: scale($scale);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: scale(0.98);
  }
}

 // ===== FORM INPUT MIXINS =====

// Base input styling
@mixin input-base {
  height: 36px;
  border-radius: $radius-md;
  border: 1px solid $border;
  padding: 0 0.5rem;
  font-size: 1rem;
  outline: none;
  transition: border-color 0.3s ease;

  &:focus {
    border-color: $secondary;
    box-shadow: 0 0 5px $secondary;
  }

  &:disabled {
    background-color: rgba(255, 255, 255, 0.7);
    cursor: not-allowed;
  }
}

// Input placeholder styling mixin
@mixin input-placeholder($color: rgba($black, 0.45), $font-size: 0.9rem, $opacity: 0.9) {
  &::placeholder {
    color: $color;
    font-size: $font-size;
    opacity: $opacity;
  }
  &::-webkit-input-placeholder {
    color: $color;
    font-size: $font-size;
    opacity: $opacity;
  }
  &::-moz-placeholder {
    color: $color;
    font-size: $font-size;
    opacity: $opacity;
  }
  &:-ms-input-placeholder {
    color: $color;
    font-size: $font-size;
    opacity: $opacity;
  }
  &::-ms-input-placeholder {
    color: $color;
    font-size: $font-size;
    opacity: $opacity;
  }
}

// Input error state
@mixin input-error {
  border-color: #dc3545 !important;
  box-shadow: 0 0 5px rgba(220, 53, 69, 0.3) !important;

  &:focus {
    border-color: #dc3545 !important;
    box-shadow: 0 0 5px rgba(220, 53, 69, 0.3) !important;
  }
}

// Form label styling
@mixin form-label {
  font-size: 0.85rem;
  color: $white;
  margin-bottom: 0.25rem;
  display: block;
}

// Form group container
@mixin form-group {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

// ===== MESSAGE/ALERT MIXINS =====

// Base message styling
@mixin message-base {
  padding: 0.75rem;
  border-radius: $radius-md;
  margin-bottom: 1rem;
  text-align: center;
  font-size: 0.9rem;
  border: 1px solid;
}

// Success message
@mixin message-success {
  @include message-base;
  background: rgba(80, 100, 200, 0.1);
  color: $secondary;
  border-color: rgba(80, 100, 200, 0.3);
}

// Error message
@mixin message-error {
  @include message-base;
  background: rgba(220, 53, 69, 0.1);
  color: $primary;
  border-color: rgba(220, 53, 69, 0.3);
}

// Field error message
@mixin field-error {
  color: #dc3545;
  font-size: 0.8rem;
  margin-top: 0.25rem;
  display: block;
}

// ===== LAYOUT MIXINS =====

// Page container layout
@mixin page-container {
  padding: 2rem;
  min-height: calc(100vh - $header-h);
  display: flex;
  align-items: center;
  justify-content: center;

  // On mobile, remove horizontal padding; inner .container supplies 1rem
  @include mobile {
    padding: 2rem 0;
  }
}

// Page title styling
@mixin page-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: $black;
  text-align: center;
}

// Form container styling
@mixin form-container {
  background-color: $secondary;
  border-radius: $radius-lg;
  padding: 2rem;
  border: 1px solid $border;
  display: flex;
  flex: 1;
  flex-direction: column;
  gap: 1.25rem;
  justify-content: center;
}

 // Content wrapper for sections
@mixin content-wrapper {
  display: flex;
  max-width: $container;
  margin: 0 auto;
  gap: 1.5rem;
  justify-content: center;
  min-height: 520px;
}

 // Section background
@mixin section-background {
  background-color: $gray-light;
  padding: 4rem 0;
}

// ===== RESPONSIVE MIXINS =====

// Mobile breakpoint
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

// Tablet breakpoint
@mixin tablet {
  @media (max-width: 1024px) and (min-width: 769px) {
    @content;
  }
}

// Small mobile breakpoint
@mixin small-mobile {
  @media (max-width: 480px) {
    @content;
  }
}

// Desktop breakpoint
@mixin desktop {
  @media (min-width: 1025px) {
    @content;
  }
}

// ===== NAVIGATION MIXINS =====

// Navigation link styling
@mixin nav-link {
  color: $black;
  text-decoration: none;
  font-weight: 500;
  font-size: 1rem;
  padding: 0.75rem 1.25rem;
  border-radius: $radius-md;
  transition: all 0.3s ease;
  position: relative;

  &:hover {
    color: $accent;
    background-color: rgba(0, 0, 0, 0.08);
    transform: scale(1.05);
    font-weight: 600;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: scale(0.98);
  }

  &.active {
    color: $accent-dark !important;
    background-color: rgba(0, 0, 0, 0.08) !important;
    transform: scale(1.05) !important;
    font-weight: 600 !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  }
}

// User icon styling
@mixin user-icon {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: $radius-md;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1rem;
  font-weight: bold;

  &:hover {
    background-color: rgba(0, 0, 0, 0.1);
    transform: scale(1.05);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }
}

// ===== UTILITY MIXINS =====

// Flexbox center
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flexbox column
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Text truncation
@mixin text-truncate($max-width: 120px) {
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Box shadow variations
@mixin shadow-light {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

@mixin shadow-medium {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

@mixin shadow-heavy {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

/* ===== DRY mixins added for shared patterns ===== */

/* Section heading utility: only margins to keep visuals identical */
@mixin section-heading($mt: 1.5rem, $mb: 1rem) {
  margin: $mt 0 $mb;
}

/* Reset link visuals when using button mixins on anchors/Links */
@mixin link-reset {
  text-decoration: none;
  color: inherit;
}

/* Responsive grid columns generator
   Example: @include grid-cols(5, 1rem, 4, 3, 2, 1); */
@mixin grid-cols(
  $desktop,
  $gap: 1rem,
  $cols-1200: null,
  $cols-992: null,
  $cols-768: null,
  $cols-480: 1
) {
  display: grid;
  grid-template-columns: repeat($desktop, 1fr);
  gap: $gap;

  @media (max-width: 1200px) {
    @if $cols-1200 {
      grid-template-columns: repeat($cols-1200, 1fr);
    }
  }
  @media (max-width: 992px) {
    @if $cols-992 {
      grid-template-columns: repeat($cols-992, 1fr);
    }
  }
  @media (max-width: 768px) {
    @if $cols-768 {
      grid-template-columns: repeat($cols-768, 1fr);
    }
  }
  @media (max-width: 480px) {
    @if $cols-480 {
      grid-template-columns: repeat($cols-480, 1fr);
    }
  }
}

/* Base card styling with subtle hover/scale/shadow */
@mixin card-base(
  $bg: color.adjust($primary, $lightness: 30%),
  $padding: 1rem,
  $radius: $radius-md,
  $shadow: 0 1px 4px rgba(0,0,0,0.08)
) {
  background: $bg;
  padding: $padding;
  border-radius: $radius;
  box-shadow: $shadow;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
  }
}

/* Base chip/badge style for tag-like UI with safe defaults */
@mixin chip-base(
  $padding: 0.4rem 0.75rem,
  $font-size: 0.9rem,
  $font-weight: 600,
  $radius: $radius-md
) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $padding;
  border-radius: $radius;
  font-size: $font-size;
  font-weight: $font-weight;
  transition: transform $transition-fast, box-shadow $transition-fast, background-color $transition-fast;
}

/* ===== STATE MIXINS ===== */

// Loading state container
@mixin loading-state($padding: 3rem 0) {
  text-align: center;
  padding: $padding;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;

  p {
    font-size: 1.1rem;
    color: $text-secondary;
    margin: 0;
  }
}

// Spinner animation
@mixin spinner($size: 40px, $border-width: 4px) {
  width: $size;
  height: $size;
  border: $border-width solid $border;
  border-top-color: $secondary;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

// Error state container
@mixin error-state($padding: 3rem 0) {
  text-align: center;
  padding: $padding;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;

  .errorMessage {
    font-size: 1.1rem;
    color: $accent;
    margin: 0;
    font-weight: 600;
  }
}

// Retry button
@mixin retry-button {
  padding: 0.7rem 1.5rem;
  background: $secondary;
  color: $white;
  border: none;
  border-radius: $radius-md;
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: $secondary-dark;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  &:active {
    transform: translateY(0);
  }
}

// Empty state container
@mixin empty-state($padding: 3rem 2rem) {
  text-align: center;
  padding: $padding;
  background: $primary-light;
  border-radius: $radius-lg;
  border: 2px dashed $border;

  .emptyMessage {
    font-size: 1.2rem;
    color: $text;
    margin: 0 0 0.5rem 0;
    font-weight: 600;
  }

  .emptyHint {
    font-size: 1rem;
    color: $text-secondary;
    margin: 0;
  }
}

/* ===== FORM MIXINS ===== */

// Form row (grid layout)
@mixin form-row($columns: 2, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
  }
}

// Upload field
@mixin upload-field {
  display: flex;
  flex-direction: column;
  margin-top: 0.75rem;

  label {
    display: inline-block;
    font-weight: 600;
    color: $black;
    margin-bottom: 0.35rem;
  }

  input[type='file'] {
    display: block;
    width: 100%;
    padding: 0.55rem 0.75rem;
    border: 1.5px solid $border;
    border-radius: $radius-md;
    background: $white;
    color: $text;
    cursor: pointer;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;

    &:hover {
      border-color: $secondary;
    }

    &:focus {
      outline: none;
      border-color: $secondary;
      box-shadow: 0 0 0 3px rgba($secondary, 0.12);
    }
  }

  .hint {
    margin-top: 0.25rem;
    font-size: 0.85rem;
    color: $text-secondary;
  }

  .preview {
    margin-top: 0.5rem;

    .previewImg {
      max-width: 200px;
      height: auto;
      border-radius: $radius-md;
      border: 1px solid $border;
      background: #f8f8f8;
      display: block;
    }
  }
}

// Form actions (button group)
@mixin form-actions($justify: flex-end, $gap: 1rem) {
  display: flex;
  gap: $gap;
  justify-content: $justify;
  margin-top: 1.5rem;

  button {
    padding: 0.7rem 1.5rem;
    border: none;
    border-radius: $radius-md;
    font-weight: 600;
    font-size: 0.95rem;
    cursor: pointer;
    transition: all 0.2s ease;

    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

// Form card/container with border
@mixin form-card($bg: $primary-light, $border-color: $secondary) {
  background: $bg;
  border: 2px solid $border-color;
  border-radius: $radius-lg;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);

  .formTitle {
    font-size: 1.25rem;
    font-weight: 700;
    color: $black;
    margin: 0 0 1rem 0;
  }
}

/* ===== BUTTON VARIATION MIXINS ===== */

// Action button (small button for cards)
@mixin action-button($height: 40px, $padding: 0 0.9rem) {
  height: $height;
  padding: $padding;
  border-radius: 999px;
  font-size: 0.95rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  line-height: 1;
  vertical-align: middle;

  svg {
    width: 18px;
    height: 18px;
    display: block;
    flex-shrink: 0;
    pointer-events: none;
  }
}

// Delete button variant
@mixin button-delete {
  @include button-primary;
  background: $accent;

  &:hover:not(:disabled) {
    background: $accent-dark;
  }
}

// Icon button (circular)
@mixin icon-button($size: 40px, $bg: $primary) {
  background-color: $bg;
  color: white;
  border: none;
  border-radius: 50%;
  width: $size;
  height: $size;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1.2rem;

  &:hover:not(:disabled) {
    background-color: color.adjust($bg, $lightness: -10%);
    transform: scale(1.1);
  }

  &:focus {
    outline: 2px solid $bg;
    outline-offset: 2px;
  }

  &:active:not(:disabled) {
    transform: scale(0.95);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

/* ===== BADGE/CHIP MIXINS ===== */

// Status badge
@mixin status-badge {
  padding: 0.25rem 0.6rem;
  border-radius: $radius-sm;
  font-weight: 600;
  font-size: 0.85rem;
  color: $black;
  background: $primary-light;
  border: 1px solid rgba(0,0,0,0.12);
  display: inline-block;
}

// Product tag (for categories)
@mixin product-tag($bg: #e0e0e0, $color: #555) {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  background-color: $bg;
  color: $color;
}

/* ===== INFO PANEL MIXIN ===== */

// Info/Welcome panel (used in Contact, Login)
@mixin info-panel($bg: $primary, $padding: 2rem) {
  background-color: $bg;
  border-radius: $radius-lg;
  padding: $padding;
  flex: 2;
  color: $black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  h2 {
    margin: 0 0 1rem 0;
    font-style: italic;
    font-weight: 700;
    font-size: 3rem;
    color: $white;

    @include mobile {
      font-size: 2.5rem;
    }
  }

  p {
    font-weight: 600;
    font-size: 1.2rem;
    color: color.adjust($bg, $lightness: -20%);

    @include mobile {
      font-size: 1rem;
    }
  }
}

/* ===== CARD LAYOUT MIXINS ===== */

// Manage card (for product/item management)
@mixin manage-card {
  @include card-base($primary-light, 1rem, $radius-md);
  display: flex;
  gap: 1rem;
  align-items: center;
}

// Card thumbnail
@mixin card-thumbnail($size: 84px) {
  width: $size;
  height: $size;
  border-radius: $radius-md;
  object-fit: cover;
  border: 1px solid $border;
  background: #eee;
}

// Card info section
@mixin card-info {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

// Card actions row
@mixin card-actions($gap: 0.75rem, $margin-top: 0.75rem) {
  display: flex;
  gap: $gap;
  margin-top: $margin-top;
  flex-wrap: wrap;
}

/* ===== UTILITY MIXINS ===== */

// Screen reader only
@mixin sr-only {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Truncate text with line clamp
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
